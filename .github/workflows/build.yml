name: Build Resume

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup Fedora 32 Environment
        run: |
          # Создаем минимальный Dockerfile
          echo "FROM fedora:31" > Dockerfile
          echo "RUN dnf upgrade -y --releasever=32 && \\" >> Dockerfile
          echo "    dnf update -y && \\" >> Dockerfile
          echo "    dnf install -y \\" >> Dockerfile
          echo "        texlive-collection-latexrecommended \\" >> Dockerfile
          echo "        texlive-collection-fontsrecommended \\" >> Dockerfile
          echo "        texlive-collection-pictures \\" >> Dockerfile
          echo "        texlive-collection-science \\" >> Dockerfile
          echo "        texlive-collection-langcyrillic \\" >> Dockerfile
          echo "        texlive-collection-latexextra \\" >> Dockerfile
          echo "        texlive-collection-fontsextra \\" >> Dockerfile
          echo "        texlive-wallpaper \\" >> Dockerfile
          echo "        texlive-geometry \\" >> Dockerfile
          echo "        texlive-fontawesome5 \\" >> Dockerfile
          echo "        texlive-hyperref \\" >> Dockerfile
          echo "        texlive-hyphenat \\" >> Dockerfile
          echo "        texlive-graphics \\" >> Dockerfile
          echo "        texlive-tools \\" >> Dockerfile
          echo "        make \\" >> Dockerfile
          echo "        git \\" >> Dockerfile
          echo "        wget \\" >> Dockerfile
          echo "        unzip \\" >> Dockerfile
          echo "        python3 \\" >> Dockerfile
          echo "    && dnf clean all" >> Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "COPY build.sh /app/" >> Dockerfile
          echo "COPY choose_system.py /app/" >> Dockerfile
          echo "COPY resume.tex /app/" >> Dockerfile
          echo "RUN chmod 755 build.sh" >> Dockerfile
          echo 'CMD ["./build.sh"]' >> Dockerfile
          
          # Собираем Docker образ
          docker build -t fedora32-tex .
          
          # Запускаем сборку PDF в контейнере
          docker run --rm -v $(pwd):/app/output fedora32-tex

      - name: Verify PDF exists
        run: |
          if [ ! -f resume.pdf ]; then
            echo "❌ PDF file not generated!"
            ls -la
            exit 1
          else
            echo "✅ PDF generated successfully"
            ls -lh resume.pdf
          fi

      - name: Prepare GitHub Pages
        run: |
          mkdir -p public/cv
          cp resume.pdf public/cv/
          
          # Создаем редирект
          echo '<!DOCTYPE html>
          <html>
            <head>
              <meta charset="UTF-8">
              <title>Resume - Ксения Шкулева</title>
              <meta http-equiv="refresh" content="0; url=cv/resume.pdf">
              <script>window.location.href="cv/resume.pdf";</script>
            </head>
            <body>
              <p>Redirecting to <a href="cv/resume.pdf">resume.pdf</a></p>
            </body>
          </html>' > public/index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
          force_orphan: true
          keep_files: false
          commit_message: "Auto-update: $(date -u +'%Y-%m-%d %H:%M')"
